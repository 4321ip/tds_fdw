
				Foreign data wrapper for TDS (Sybase and Microsoft SQL Server)

Author: Geoff Montee
Name: tds_fdw
File: tds_fdw/README

Description:
This is a PostgreSQL foreign data wrapper for use to connect to databases that use TDS,
such as Sybase databases and Microsoft SQL server.

This foreign data wrapper requires requires a library that uses the DB-Library interface,
such as FreeTDS (http://www.freetds.org/). This has been tested with FreeTDS, but not
the proprietary implementations of DB-Library.

This was written to support PostgreSQL 9.1 and 9.2. It does not support write operations, as added in PostgreSQL 9.3.

Building was accomplished by doing the following under CentOS 6:

# Install EPEL for FreeTDS
wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
sudo rpm -ivh epel-release-6-8.noarch.rpm

# Install FreeTDS
sudo yum install freetds freetds-devel

# Install PostgreSQL 9.2
wget http://yum.postgresql.org/9.2/redhat/rhel-6-x86_64/pgdg-centos92-9.2-6.noarch.rpm
sudo rpm -ivh pgdg-centos92-9.2-6.noarch.rpm
sudo yum install postgresql92 postgresql92-server postgresql92-libs postgresql92-devel

#Clone and build
git clone https://github.com/GeoffMontee/tds_fdw.git
cd tds_fdw
PATH=/usr/pgsql-9.2/bin:$PATH make USE_PGXS=1
sudo PATH=/usr/pgsql-9.2/bin:$PATH make USE_PGXS=1 install

#Start server and install extension
sudo /etc/init.d/postgresql-9.2 initdb
sudo /etc/init.d/postgresql-9.2 start
/usr/pgsql-9.2/bin/psql -U postgres
postgres=# CREATE EXTENSION tds_fdw;

The usage of tds_fdw is similar to mysql_fdw created by Dave Page.

Foreign server parameters accepted:

address:		The address or hostname of the foreign server server.
				Default: 127.0.0.1
				
port:			The port of the foreign server.
				Default: 5000

e.g.:
				
CREATE SERVER mssql_svr
	FOREIGN DATA WRAPPER tds_fdw
	OPTIONS (address '127.0.0.1', port '1433');
				
Foreign table parameters accepted:

database:		The database name that the foreign table is a part of.
				Default: NULL
				
query:			The query string to use to query the foreign table.
				Default: NULL
				
table:			The table on the foreign server to query.
				Default: NULL
				
The query and table paramters are mutually exclusive.

e.g.:

CREATE FOREIGN TABLE mssql_table (
	id integer,
	data varchar)
	SERVER mssql_svr
	OPTIONS (database 'mydb', table 'dbo.mytable');
	
Or:

CREATE FOREIGN TABLE mssql_table (
	id integer,
	data varchar)
	SERVER mssql_svr
	OPTIONS (database 'mydb', query 'SELECT * FROM dbo.mytable');

User mapping parameters accepted:

username:		The username of the account on the foreign server.
				Default: NULL
				
password:		The password of the account on the foreign server.
				Default: NULL

e.g.:
				
CREATE USER MAPPING FOR postgres
	SERVER mssql_svr 
    OPTIONS (username 'sa', password '');